---
import '@fontsource/source-code-pro/400.css';
import '@fontsource/source-code-pro/500.css';

import { getAllPaths, getPostBySlug } from '../lib/api';
import { rehype } from 'rehype';
import Root from '../layouts/Root.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Html from '../components/Html.astro';
import Link from '../components/Link.astro';
import Image from '../components/Image.astro';
import pageSymbol from '../lib/pageSymbol';

export async function getStaticPaths() {
  const paths = await getAllPaths();
  return paths.map((slug) => ({
    params: { slug: slug === '/' ? undefined : slug.slice(1, slug.length - 1) },
  }));
}

const { slug } = Astro.params;
const post = await getPostBySlug(slug ? '/' + slug + '/' : '/');
const data = post.data;
const image = data.images?.[0]?.src ?? '/gravatar.png';
const backlinks = await Promise.all([...data.backlinks].map(getPostBySlug));

const html = rehype.stringify(post.result);
---

<Root title={data.title} image={image} description={data.description ?? null}>
  <link
    slot="head"
    rel="alternate"
    type="application/rss+xml"
    title="RSS feed for all posts"
    href="/posts.rss.xml"
  />

  <article>
    <Header
      title={data.title}
      icon={data.icon ?? pageSymbol(data.pageType)}
      date={data.date}
      lastModified={data.last_modified}
    />
    <Html
      html={html}
      components={{
        a: Link,
        img: Image,
      }}
    />
    {
      !!backlinks.length && data.no_backlinks === undefined && (
        <>
          <h2>Backlinks</h2>
          <ul>
            {backlinks
              .sort((a, b) => (a.path < b.path ? -1 : 1))
              .map((b) => (
                <li>
                  {b.data.icon ?? pageSymbol(b.data.pageType)}
                  <Link href={b.path}>{b.data.title}</Link>
                </li>
              ))}
          </ul>
        </>
      )
    }
  </article>
  <Footer />
</Root>
